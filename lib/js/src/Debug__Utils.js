// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE
'use strict';

var $$String   = require("bs-platform/lib/js/string.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

var _m = 1000 * 60;

var _h = _m * 60;

var _d = _h * 24;

function _format(t, d, unit) {
  var s = String(Math.round(t / d));
  return "" + (String(s) + (" " + (String(unit) + "")));
}

function ms(ms$1) {
  if (ms$1 >= _d) {
    return _format(ms$1, _d, "d");
  } else if (ms$1 >= _h || ms$1 >= _m) {
    return _format(ms$1, _h, "h");
  } else if (ms$1 >= 1000) {
    return _format(ms$1, 1000, "s");
  } else {
    return _format(ms$1, 1, "ms");
  }
}

var Format = /* module */[
  /* _s */1000,
  /* _m */_m,
  /* _h */_h,
  /* _d */_d,
  /* _format */_format,
  /* ms */ms
];

function selectColor(namespace, colors) {
  var hash = [0];
  $$String.iter((function (c) {
          hash[0] = ((hash[0] << 5) - hash[0] | 0) + c | 0;
          return /* () */0;
        }), namespace);
  return Caml_array.caml_array_get(colors, Caml_int32.mod_(Math.abs(hash[0]), colors.length));
}

exports.Format      = Format;
exports.selectColor = selectColor;
/* No side effect */
